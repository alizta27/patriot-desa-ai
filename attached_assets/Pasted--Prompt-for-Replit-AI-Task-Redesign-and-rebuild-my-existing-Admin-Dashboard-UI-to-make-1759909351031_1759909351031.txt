### ðŸ§  Prompt for Replit AI

**Task:**  
Redesign and rebuild my existing Admin Dashboard UI to make it look like a professional, modern admin dashboard with server-side rendering (SSR).

---

**Important:**  
All text, labels, buttons, and interface elements in the UI must use **Bahasa Indonesia**, not English.  
(The app is intended for Indonesian users.)

---

**Goals:**

1. Make the UI visually polished, consistent, and responsive.  
2. Add a left sidebar (for navigation), a top header (for title, profile, and logout), and clean main content sections.  
3. Include common admin dashboard features and missing UI parts that enhance usability (search bar, notifications, analytics cards, data tables, etc.).  
4. Add a proper layout with a menu button toggle for the sidebar (mobile-friendly).  
5. Include a functional logout button (mock only for now).  
6. Replace all API calls with mock APIs (fetch from JSON or placeholder functions) â€” real APIs will be integrated later.  
7. Use **Server-Side Rendering (SSR)** for better performance and SEO.  
8. Keep the code modular, reusable, and cleanly structured.  

---

**Tech Preferences (adjust if needed):**

- Framework: **React** with **SSR support** (e.g., using React Router v7â€™s new SSR features).  
- Styling: **Tailwind CSS** (or similar modern styling system).  
- Routing: **React Router v7 (new version)** for all navigation and SSR handling.  
- Use component-based structure (e.g., `Sidebar`, `Header`, `DashboardHome`, `UsersPage`, `SettingsPage`, etc.).  
- Use `lucide-react` or `react-icons` for icons.  
- Optional: Add simple charts using `recharts` or `chart.js` for analytics or overview.  

---

**Pages inside admin dashboard:**

- **Dashboard:** Overview with cards, charts, and quick stats.  
- **User Management:** User table with add/edit/delete (mock functionality).  
- **Settings:** Account settings and system configuration.  
- **Logs / Activity:** Optional but recommended.  

---

**Visual Style References:**

- Clean, modern admin layout (like TailAdmin, Shadcn UI, or MUI dashboards).  
- Support for **light and dark mode** if possible.  

---

**Output Expectations:**

- A fully working **React SSR project** or an updated version of the current Admin Dashboard with SSR support.  
- Include sample data using mock APIs.  
- Organized folder structure: `/components`, `/pages`, `/api/mock`, `/assets`, etc.  
- Well-commented and modular code, easy to extend later.  

---

**Example structure suggestion:**

```bash
src/
  components/
  pages/
    admin/
      Dashboard.jsx
      Settings.jsx
  api/
    mock/
      users.js
      stats.js
      etc.
  routes/
    index.jsx
    admin/
      dashboard.jsx
      etc.
````

---

**Final Objective:**
Create a professional, clean, and user-friendly **Admin Dashboard** layout with **SSR** and the **new React Router**, ready for API integration later â€”
and make sure all UI text and labels are in **Bahasa Indonesia**.
